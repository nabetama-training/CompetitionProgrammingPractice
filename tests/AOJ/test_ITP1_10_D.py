import sys
from io import StringIO
import unittest

from src.AOJ.ITP1_10_D import resolve


class TestClass(unittest.TestCase):
    def assertIO(self, input, output):
        stdout, stdin = sys.stdout, sys.stdin
        sys.stdout, sys.stdin = StringIO(), StringIO(input)
        resolve()
        sys.stdout.seek(0)
        out = sys.stdout.read()[:]
        sys.stdout, sys.stdin = stdout, stdin
        self.assertEqual(out, output)

    def test_1(self):
        input = """3
1 2 3
2 0 4
"""
        output = """4.00000000
2.44948974
2.15443469
2.00000000
"""
        self.assertIO(input, output)

    def test_2(self):
        input = """2
1 0
0 1
"""
        output = """2.00000000
1.41421356
1.25992105
1.00000000
"""
        self.assertIO(input, output)

    def test_3(self):
        input = """5
1 2 3 4 5
5 0 7 9 2
"""
        output = """18.00000000
8.36660027
6.60385450
5.00000000
"""
        self.assertIO(input, output)

    def test_4(self):
        input = """8
1 2 3 4 5 6 7 8
8 7 6 5 4 3 2 1
"""
        output = """32.00000000
12.96148140
9.97326190
7.00000000
"""
        self.assertIO(input, output)

    def test_5(self):
        input = """8
123 55 2 105 555 23 1 99
73 1 59 777 231 981 881 3
"""
        output = """3091.00000000
1505.52482543
1238.45779853
958.00000000
"""
        self.assertIO(input, output)

    def test_6(self):
        input = """10
11 0 1 7 8 16 23 8 0 15
93 2 1 21 15 77 86 39 54 6
"""
        output = """323.00000000
136.45878499
106.83764355
82.00000000
"""
        self.assertIO(input, output)

    def test_7(self):
        input = """1
3
8
"""
        output = """5.00000000
5.00000000
5.00000000
5.00000000
"""
        self.assertIO(input, output)

    def test_8(self):
        input = """1
1000
0
"""
        output = """1000.00000000
1000.00000000
1000.00000000
1000.00000000
"""
        self.assertIO(input, output)

    def test_9(self):
        input = """5
0 0 0 0 0
0 0 0 0 0
"""
        output = """0.00000000
0.00000000
0.00000000
0.00000000
"""
        self.assertIO(input, output)

    def test_10(self):
        input = """3
1 1 1
1 1 1
"""
        output = """0.00000000
0.00000000
0.00000000
0.00000000
"""
        self.assertIO(input, output)

    def test_11(self):
        input = """100
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
"""
        output = """0.00000000
0.00000000
0.00000000
0.00000000
"""
        self.assertIO(input, output)

    def test_12(self):
        input = """100
3 2 0 2 6 1 3 8 0 9 7 2 0 9 4 1 0 5 4 2 3 0 6 9 5 0 4 9 7 3 4 9 6 2 0 9 5 7 7 6 6 3 7 9 2 3 1 0 5 3 7 6 2 0 8 1 7 7 8 8 1 3 5 0 2 3 1 0 8 3 8 8 5 8 1 7 9 8 3 4 3 0 2 5 0 2 0 4 8 9 5 2 1 2 5 8 9 9 5 3
3 9 8 6 9 1 5 3 6 2 7 8 3 2 9 7 4 0 0 4 1 6 1 7 1 4 5 0 6 4 0 0 2 3 9 5 9 9 4 9 4 5 6 4 5 8 0 7 6 1 2 8 1 0 1 4 4 5 1 7 7 9 0 3 4 7 0 7 6 7 3 8 3 0 6 0 7 3 0 5 2 7 0 0 6 5 7 1 6 0 5 4 6 8 0 3 6 0 2 4
"""
        output = """384.00000000
45.38722287
23.45653653
9.00000000
"""
        self.assertIO(input, output)

    def test_13(self):
        input = """100
95 73 30 45 94 73 74 41 44 40 79 49 10 17 87 26 12 95 53 17 17 77 99 28 61 70 94 30 4 59 54 2 53 36 63 7 10 16 19 71 56 53 54 77 20 14 19 98 1 51 17 24 71 25 16 97 32 4 95 7 2 45 40 96 7 97 50 30 16 93 53 30 43 88 92 74 93 49 37 41 43 15 9 54 1 16 77 5 12 92 1 4 2 63 73 6 26 59 58 84
10 55 95 5 48 53 60 56 43 37 35 29 7 55 73 45 72 53 83 55 76 76 54 2 55 16 81 80 86 7 79 65 32 32 17 83 67 46 28 7 20 28 30 48 4 10 25 31 9 22 52 95 53 78 42 88 17 43 49 36 67 63 98 51 67 78 9 60 61 9 98 34 89 31 1 94 65 65 58 48 29 89 88 43 71 64 12 11 82 23 24 37 4 91 75 59 96 63 77 47
"""
        output = """3560.00000000
427.75927810
222.58535294
91.00000000
"""
        self.assertIO(input, output)

    def test_14(self):
        input = """100
156 605 194 430 883 447 847 49 588 133 842 567 506 0 118 718 975 119 596 916 840 430 155 311 796 216 993 728 905 37 286 377 554 757 580 866 933 490 732 114 647 435 183 742 604 872 480 979 481 791 0 832 858 178 468 703 922 893 957 919 92 220 38 452 728 152 423 704 350 825 964 165 404 873 624 829 224 604 37 625 419 688 820 966 55 228 676 382 261 491 74 342 33 318 938 757 288 527 868 570
948 454 359 323 24 202 876 792 304 558 414 728 391 992 398 868 579 363 379 466 232 414 571 179 300 903 55 481 29 897 657 682 506 529 641 852 660 616 606 185 227 58 110 374 671 605 671 717 680 775 46 468 226 666 254 463 511 648 831 512 232 223 609 522 976 517 402 936 35 128 426 775 164 258 821 777 226 451 838 379 575 897 78 797 674 402 279 976 327 282 761 697 805 875 320 439 771 856 64 479
"""
        output = """34010.00000000
4221.14913264
2254.32263705
992.00000000
"""
        self.assertIO(input, output)
