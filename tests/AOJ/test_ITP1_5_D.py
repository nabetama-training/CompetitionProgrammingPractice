import sys
from io import StringIO
import unittest

from src.AOJ.ITP1_5_D import resolve


class TestClass(unittest.TestCase):
    def assertIO(self, input, output):
        stdout, stdin = sys.stdout, sys.stdin
        sys.stdout, sys.stdin = StringIO(), StringIO(input)
        resolve()
        sys.stdout.seek(0)
        out = sys.stdout.read()[:]
        sys.stdout, sys.stdin = stdout, stdin
        self.assertEqual(out, output)

    def test_1(self):
        input = """30"""
        output = """ 3 6 9 12 13 15 18 21 23 24 27 30
"""
        self.assertIO(input, output)

    def test_2(self):
        input = """60"""
        output = """ 3 6 9 12 13 15 18 21 23 24 27 30 31 32 33 34 35 36 37 38 39 42 43 45 48 51 53 54 57 60
"""
        self.assertIO(input, output)

    def test_3(self):
        input = """3
"""
        output = """ 3
"""

        self.assertIO(input, output)

    def test_4(self):
        input = """100
"""
        output = """ 3 6 9 12 13 15 18 21 23 24 27 30 31 32 33 34 35 36 37 38 39 42 43 45 48 51 53 54 57 60 63 66 69 72 73 75 78 81 83 84 87 90 93 96 99
"""

        self.assertIO(input, output)

    def test_5(self):
        input = """256
"""
        output = """ 3 6 9 12 13 15 18 21 23 24 27 30 31 32 33 34 35 36 37 38 39 42 43 45 48 51 53 54 57 60 63 66 69 72 73 75 78 81 83 84 87 90 93 96 99 102 103 105 108 111 113 114 117 120 123 126 129 130 131 132 133 134 135 136 137 138 139 141 143 144 147 150 153 156 159 162 163 165 168 171 173 174 177 180 183 186 189 192 193 195 198 201 203 204 207 210 213 216 219 222 223 225 228 230 231 232 233 234 235 236 237 238 239 240 243 246 249 252 253 255
"""

        self.assertIO(input, output)

    def test_6(self):
        input = """500
"""
        output = """ 3 6 9 12 13 15 18 21 23 24 27 30 31 32 33 34 35 36 37 38 39 42 43 45 48 51 53 54 57 60 63 66 69 72 73 75 78 81 83 84 87 90 93 96 99 102 103 105 108 111 113 114 117 120 123 126 129 130 131 132 133 134 135 136 137 138 139 141 143 144 147 150 153 156 159 162 163 165 168 171 173 174 177 180 183 186 189 192 193 195 198 201 203 204 207 210 213 216 219 222 223 225 228 230 231 232 233 234 235 236 237 238 239 240 243 246 249 252 253 255 258 261 263 264 267 270 273 276 279 282 283 285 288 291 293 294 297 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 402 403 405 408 411 413 414 417 420 423 426 429 430 431 432 433 434 435 436 437 438 439 441 443 444 447 450 453 456 459 462 463 465 468 471 473 474 477 480 483 486 489 492 493 495 498
"""

        self.assertIO(input, output)
